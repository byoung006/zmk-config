/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
    quick_tap_ms = <200>;
};

&lt {
    tapping_term_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            label = "Base"; 
            bindings = <
&none      &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                                      &kp N6   &kp N7    &kp N8     &kp N9    &kp N0    &kp EQUAL 
&kp GRAVE  &kp Q   &kp W   &kp E   &kp R     &kp T                                       &kp Y    &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A   &kp S   &kp D   &kp F     &kp G                                       &kp H    &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C   &kp  V    &kp B      &kp TAB       &kp LC(LS(LALT))   &kp N    &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp MINUS
                           &mo 1   &kp LALT  &kp SPACE  &sk LSHFT     &lt 1 BSPC         &kp RET  &kp LGUI  &mo 2
            >;
        };

        first_layer {
            label = "First";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                     &kp F7    &kp F8    &kp F9    &kp F10    &kp F11   &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &trans    &kp LBKT  &kp LBRC  &kp RBRC   &kp RBKT  &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans    &trans    &trans    &trans     &trans    &trans
                        &trans  &trans  &trans  &trans     &trans  &trans    &trans    &trans
            >;
        };

        second_layer {
            label = "Second";
            bindings = <
&trans &trans &kp C_PP  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans &trans &trans    &trans        &trans        &trans                          &trans        &trans        &trans        &trans        &trans        &trans
&trans &trans &trans    &trans        &trans        &trans                          &trans        &trans        &trans        &trans        &trans        &trans
&trans &trans &trans    &trans        &trans        &trans                          &trans        &trans        &trans        &trans        &trans        &trans
                        &trans        &trans        &trans      &trans      &trans  &trans        &trans        &trans
            >;
        };
    };
};
