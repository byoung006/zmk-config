/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt TILDE GRAVE                    &mt EXCL KP_NUMBER_1  &mt AT KP_NUMBER_2  &mt POUND KP_NUMBER_3  &mt DOLLAR KP_NUMBER_4  &mt PERCENT KP_NUMBER_5    &mt CARET KP_NUMBER_6  &mt AMPERSAND KP_NUMBER_7  &mt ASTRK KP_NUMBER_8  &mt LEFT_PARENTHESIS KP_NUMBER_9  &mt RIGHT_PARENTHESIS KP_NUMBER_0  &mt MINUS UNDERSCORE
&tog 1                             &kp Q                 &kp W               &kp E                  &kp R                   &kp T                      &kp Y                  &kp U                      &kp I                  &kp O                             &kp P                              &mt PLUS EQUAL
&kp LEFT_SHIFT                     &kp A                 &kp S               &kp D                  &kp F                   &kp G                      &kp H                  &kp J                      &kp K                  &kp L                             &mt COLON SEMICOLON                &mt DOUBLE_QUOTES SINGLE_QUOTE
&mt LEFT_CONTROL LEFT_PARENTHESIS  &kp Z                 &kp X               &kp C                  &kp V                   &kp B                      &kp N                  &kp M                      &kp COMMA              &kp DOT                           &mt KP_SLASH QUESTION              &mt RIGHT_SHIFT RIGHT_PARENTHESIS
                                                                             &kp SPACE              &kp TAB                 &sk LSHFT                  &kp ESCAPE             &kp ENTER                  &kp BACKSPACE
                                                                                                    &kp LC(UP_ARROW)        &kp LEFT_GUI               &kp LEFT_ALT           &kp LC(DOWN_ARROW)
            >;
        };

        symbol_layer {
            bindings = <
&kp F1  &kp F2         &kp F3    &kp F4         &kp F5        &kp F6          &kp F7          &kp F8            &kp F9             &kp F10    &kp F11    &kp F12
&trans  &kp LC(LA(Q))  &trans    &trans         &bt BT_SEL 1  &bt BT_SEL 0    &kp EXCL        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans     &trans     &trans
&trans  &kp ASTRK      &kp PIPE  &kp BACKSLASH  &kp SLASH     &trans          &kp HOME        &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp END    &kp COLON  &trans
&trans  &trans         &trans    &kp LC(LS(I))  &trans        &trans          &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW       &kp RIGHT  &kp PRCNT  &bootloader
                                 &trans         &trans        &trans          &trans          &trans            &trans
                                                &trans        &trans          &trans          &trans
            >;
        };

        number_layer {
            bindings = <
&trans       &trans  &kp C_PP  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE    &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans       &trans  &trans    &trans        &trans        &trans        &bt BT_DISC 2  &kp N7        &kp N8        &kp N9        &trans        &trans
&trans       &trans  &trans    &trans        &trans        &trans        &trans         &kp N4        &kp N5        &kp N6        &trans        &trans
&bootloader  &trans  &trans    &trans        &trans        &trans        &kp N0         &kp N1        &kp N2        &kp N3        &trans        &bootloader
                               &trans        &trans        &trans        &trans         &trans        &trans
                                             &trans        &trans        &trans         &trans
            >;
        };
    };
};
